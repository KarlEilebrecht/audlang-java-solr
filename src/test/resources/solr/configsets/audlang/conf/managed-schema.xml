<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!--
 This is a Solr schema file for the audlang example data.
-->

<schema name="audlang" version="1.7">


   <!-- If you remove this field, you must _also_ disable the update log in solrconfig.xml
      or Solr won't start. _version_ and update log are required for SolrCloud
   -->
   <!-- doc values are enabled by default for primitive types such as long so we don't index the version field  -->
   <field name="_version_" type="plong" indexed="false" stored="false"/>

   <!-- points to the root document of a block of nested documents. Required for anonymously nested
      document support, may be removed otherwise
   -->
   <field name="_root_" type="string" indexed="true" stored="false" />

   <!-- this inserts the nesting path into the leaf document -->
   <field name="_nest_path_" type="_nest_path_" stored="true"/>

   <!-- this inserts parent-id into the leaf document -->
   <field name="_nest_parent_" type="string" indexed="true" stored="true"/>

   <!-- The id-field is the identifier you query or count.
   -->
   <field name="id" type="string" indexed="true" stored="true" required="true" />

   <!-- The parent_id-field identifies the parent in a scenario without nesting (all root documents).
        to allow for joining
   -->
   <field name="main_id" type="string" indexed="true" stored="true" />

   <!-- The node-type is required for querying nested data with block joins.
        Every document has this information attached, so we can later restrict
        where to search and what type of document to return.
   -->
   <field name="node_type" type="string" indexed="true" stored="true" required="true" />

   <!-- All field metadata is global (across children and parent) 
        That means you can neither define the same named field differently on different
        "levels" nor can you mark a field required that is not mandatory on
        all documents (parent and children).
   -->

   <field name="provider" type="string" indexed="true" stored="true"/>
   <field name="country" type="string" indexed="true" stored="true"/>
   <field name="city" type="string" indexed="true" stored="true"/>
   <field name="demcode" type="pint" indexed="true" stored="true"/>
   <field name="gender" type="string" indexed="true" stored="true"/>
   <field name="omscore" type="pfloat" indexed="true" stored="true"/>
   <field name="updtime" type="pdate" indexed="true" stored="true"/>
   <field name="upddate" type="pdate" indexed="true" stored="true"/>
   <field name="tntcode" type="pint" indexed="true" stored="true"/>
   <field name="bstate" type="boolean" indexed="true" stored="true"/>
   <field name="scode" type="pint" indexed="true" stored="true"/>
   <field name="bicode" type="plong" indexed="true" stored="true"/>
   <field name="ncode" type="pdouble" indexed="true" stored="true"/>

   <!-- the tenant field can optionally be specified on any document
        to later narrow queries -->
   <field name="tenant" type="pint" indexed="true" stored="true"/>

   <!-- facts are dynamic fields, following the convention fct_key_ss (string, multi-value), fct_key_is (integer, multi-value), fct_key_ls (long, multi-value), fct_key_ds (double, multi-value), fct_key_fs (float, multi-value), fct_key_dts (date/time, multi-value), fct_key_b (boolean, single value) -->
   <!-- survey questions are dynamic fields, following the convention srv_tenant_key_ts (answer text, multi-value), fct_key_l (long, single value), fct_key_b (boolean, single value) -->
   <!-- flat string key-value(s), by convention flt_key_ts (string, multi-value) -->

   <!-- Although possible, we don't want to work with anonymous child documents 
        Thus we need to specify a field to tell solar the name of the child document,
   -->
   <field name="fact_data" type="_nested_list_name_" indexed="true" stored="true"/>
   <field name="survey_data" type="_nested_list_name_" indexed="true" stored="true"/>
   <field name="pos_data" type="_nested_list_name_" indexed="true" stored="true"/>


   <!-- Dynamic field definitions allow using convention over configuration
      for fields via the specification of patterns to match field names.
      EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
      RESTRICTION: the glob-like pattern in the name attribute must have a "*" only at the start or the end.  -->

   <dynamicField name="*_i"   type="pint"     indexed="true"  stored="true"/>
   <dynamicField name="*_is"  type="pints"    indexed="true"  stored="true"/>
   <dynamicField name="*_s"   type="string"   indexed="true"  stored="true" />
   <dynamicField name="*_ss"  type="strings"  indexed="true"  stored="true"/>
   <dynamicField name="*_l"   type="plong"    indexed="true"  stored="true"/>
   <dynamicField name="*_ls"  type="plongs"   indexed="true"  stored="true"/>
   <dynamicField name="*_b"   type="boolean"  indexed="true"  stored="true"/>
   <dynamicField name="*_bs"  type="booleans" indexed="true"  stored="true"/>
   <dynamicField name="*_f"   type="pfloat"   indexed="true"  stored="true"/>
   <dynamicField name="*_fs"  type="pfloats"  indexed="true"  stored="true"/>
   <dynamicField name="*_d"   type="pdouble"  indexed="true"  stored="true"/>
   <dynamicField name="*_ds"  type="pdoubles" indexed="true"  stored="true"/>
   <dynamicField name="*_dt"  type="pdate"    indexed="true"  stored="true"/>
   <dynamicField name="*_dts" type="pdates"   indexed="true"  stored="true"/>

   <!-- uncomment the following to ignore any fields that don't already match an existing
        field name or dynamic field, rather than reporting them as an error.
        alternately, change the type="ignored" to some other type e.g. "text" if you want
        unknown fields indexed and/or stored by default -->
   <!--dynamicField name="*" type="ignored" multiValued="true" /-->


   <!-- Field to use to determine and enforce document uniqueness.
      Unless this field is marked with required="false", it will be a required field
    -->
   <uniqueKey>id</uniqueKey>


    <!-- field type definitions. The "name" attribute is
       just a label to be used by field definitions.  The "class"
       attribute and any other attributes determine the real
       behavior of the fieldType.
         Class names starting with "solr" refer to java classes in a
       standard package such as org.apache.solr.analysis
    -->

    <!-- type of the child document fields where nested paths
         are stored automatically during load -->
	<fieldType name="_nest_path_" class="solr.NestPathField"/>
	
	<!-- When we don't want to work with anonymous child documents, the 
	     name (later the path name) of each child must be stored as a field in solar.
	     This is sometimes confusing as you won't see it ever in the solr document!
	     Instead, it will be taken from the seed (JSON property) to be added to
	     the _nest_path_ of every child document. -->
	<fieldType name="_nested_list_name_" class="solr.TextField" indexed="true" stored="true" multiValued="true"/>


    <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" />
    <fieldType name="strings" class="solr.StrField" sortMissingLast="true" multiValued="true" />


    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
    <fieldType name="booleans" class="solr.BoolField" sortMissingLast="true" multiValued="true"/>

    <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
         currently supported on types that are sorted internally as strings
         and on numeric types.
       This includes "string", "boolean", "pint", "pfloat", "plong", "pdate", "pdouble".
       - If sortMissingLast="true", then a sort on this field will cause documents
         without the field to come after documents with the field,
         regardless of the requested sort order (asc or desc).
       - If sortMissingFirst="true", then a sort on this field will cause documents
         without the field to come before documents with the field,
         regardless of the requested sort order.
       - If sortMissingLast="false" and sortMissingFirst="false" (the default),
         then default lucene sorting will be used which places docs without the
         field first in an ascending sort and last in a descending sort.
    -->

    <!--
      Numeric field types that index values using KD-trees.
      Point fields don't support FieldCache, so they must have docValues enabled if needed for sorting, faceting, functions, etc.
      This is the default, so it does not need to be set explicitly.
    -->
    <fieldType name="pint" class="solr.IntPointField"/>
    <fieldType name="pfloat" class="solr.FloatPointField"/>
    <fieldType name="plong" class="solr.LongPointField"/>
    <fieldType name="pdouble" class="solr.DoublePointField"/>

    <fieldType name="pints" class="solr.IntPointField" multiValued="true"/>
    <fieldType name="pfloats" class="solr.FloatPointField" multiValued="true"/>
    <fieldType name="plongs" class="solr.LongPointField" multiValued="true"/>
    <fieldType name="pdoubles" class="solr.DoublePointField" multiValued="true"/>

    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
         is a more restricted form of the canonical representation of dateTime
         http://www.w3.org/TR/xmlschema-2/#dateTime
         The trailing "Z" designates UTC time and is mandatory.
         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
         All other components are mandatory.

         Expressions can also be used to denote calculations that should be
         performed relative to "NOW" to determine the value, ie...

               NOW/HOUR
                  ... Round to the start of the current hour
               NOW-1DAY
                  ... Exactly 1 day prior to now
               NOW/DAY+6MONTHS+3DAYS
                  ... 6 months and 3 days in the future from the start of
                      the current day

         Consult the DatePointField javadocs for more information.
      -->

    <!-- KD-tree versions of date fields -->
    <fieldType name="pdate" class="solr.DatePointField" />
    <fieldType name="pdates" class="solr.DatePointField" multiValued="true"/>


</schema>
